# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        nw=ListNode(l1.val+l2.val)
        t=nw
        carry=0
        if t.val>19:
            carry=2
            t.val-=20
        elif t.val>9:
            carry=1
            t.val-=10
        else:
            carry=0
        l1=l1.next
        l2=l2.next
        
        while l1!=None and l2!=None:
            t.next=ListNode(l1.val+l2.val+carry)
            t=t.next
            if t.val>19:
                carry=2
                t.val-=20
            elif t.val>9:
                carry=1
                t.val-=10
            else:
                carry=0
            l1=l1.next
            l2=l2.next
        while l1!=None:
            t.next=ListNode(l1.val+carry)
            t=t.next
            if t.val>19:
                carry=2
                t.val-=20
            elif t.val>9:
                carry=1
                t.val-=10
            else:
                carry=0
            l1=l1.next
        while l2!=None:
            t.next=ListNode(l2.val+carry)
            t=t.next
            if t.val>19:
                carry=2
                t.val-=20
            elif t.val>9:
                carry=1
                t.val-=10
            else:
                carry=0
            l2=l2.next
        if carry!=0:
            t.next=ListNode(carry)
        return nw