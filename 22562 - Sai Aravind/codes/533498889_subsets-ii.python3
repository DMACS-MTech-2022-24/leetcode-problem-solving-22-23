from collections import Counter
import itertools
class Solution:
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        power_set = []
        z = Counter(nums)
        x = map(repetitionSet,z.items())
        return list(map(correctCartProduct,itertools.product(*x)))
def repetitionSet(num):
    a = [[],]
    b = [num[0],]
    for k in range(num[1]):
        a.append(b)
        b = [*b,num[0]]
    return a
    
def correctCartProduct(i):
    return [a for b in i for a in b]